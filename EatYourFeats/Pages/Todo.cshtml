@page
@model EatYourFeats.Pages.TodoModel
@{
    ViewData["Title"] = "Add Tasks";
}

<h2>Add a Task</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<form method="post">
    <div class="form-group">
        <label asp-for="TaskName">Task Name</label>
        <input asp-for="TaskName" class="form-control" />
        <span asp-validation-for="TaskName" class="text-danger"></span>
    </div>
    
    <div class="form-group">
        <label asp-for="TaskPoints">Point Value</label>
        <input asp-for="TaskPoints" class="form-control" />
        <span asp-validation-for="TaskPoints" class="text-danger"></span>
    </div>
    
    <button type="submit" class="btn btn-primary">Add Task</button>
</form>

<form method="post" asp-page-handler="ConfirmList">
    <button type="submit" class="btn btn-primary">Confirm List</button>
</form>

<h3>Task List</h3>
<!-- creates a table for task names and points -->
<table>
    <tr><th>Name</th><th>Point Value</th></tr>
    @if (Model.TaskList is not null) {
        <!-- adds a row for each task -->
        @foreach (var task in Model.TaskList)
        {
            <tr>
            <td>@task.Name</td>
            <td>@task.Points</td>
            </tr>
        }
    } else {
        <!-- if no tasks found, display that the list is empty (can probably improve this later) -->
        <tr>
        <td>No tasks found</td>
        <td>N/A</td>
        </tr>
    }
</table>
